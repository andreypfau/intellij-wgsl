/* The following code was generated by JFlex 1.7.0 tweaked for IntelliJ platform */

package wgslplugin.language;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;
import java.util.*;

import static com.intellij.psi.TokenType.BAD_CHARACTER;
import static com.intellij.psi.TokenType.WHITE_SPACE;
import static wgslplugin.language.psi.WGSLTypes.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>WGSLLexer.flex</tt>
 */
public class _WgslLexer implements FlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int TYPE_SPEC = 2;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  1,  2, 2
  };

  /** 
   * Translates characters to character classes
   * Chosen bits are [7, 7, 7]
   * Total runtime size is 1928 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[ZZ_CMAP_Z[ch>>14]|((ch>>7)&0x7f)]<<7)|(ch&0x7f)];
  }

  /* The ZZ_CMAP_Z table has 68 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
    "\1\0\103\200");

  /* The ZZ_CMAP_Y table has 256 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
    "\1\0\1\1\53\2\1\3\22\2\1\4\37\2\1\3\237\2");

  /* The ZZ_CMAP_A table has 640 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
    "\11\1\1\0\1\2\2\0\1\2\22\1\1\0\1\70\1\1\1\22\1\1\1\73\1\72\1\1\1\35\1\36\1"+
    "\4\1\16\1\33\1\5\1\13\1\3\1\6\1\61\1\62\1\63\1\66\1\11\1\100\1\11\1\77\1\11"+
    "\1\67\1\45\1\40\1\65\1\41\1\1\1\46\1\76\3\10\1\15\1\10\11\24\1\21\12\24\1"+
    "\32\1\1\1\34\1\75\1\23\1\1\1\27\1\64\1\42\1\60\1\14\1\17\1\55\1\57\1\50\1"+
    "\24\1\54\1\30\1\56\1\47\1\51\1\20\1\24\1\26\1\31\1\25\1\12\1\52\1\53\1\7\1"+
    "\37\1\24\1\43\1\74\1\44\1\71\6\1\1\0\32\1\1\0\337\1\1\0\177\1\13\0\35\1\2"+
    "\0\5\1\1\0\57\1\1\0\40\1");

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\3\0\1\1\1\2\1\1\1\3\1\4\1\5\1\6"+
    "\1\7\1\6\1\7\1\10\1\7\1\11\2\7\1\12"+
    "\5\7\1\13\1\14\1\15\1\16\1\17\1\20\1\21"+
    "\1\7\1\22\1\23\1\24\1\25\6\7\1\26\1\27"+
    "\1\30\1\31\1\32\1\33\1\34\1\35\2\1\1\36"+
    "\1\2\3\7\1\2\3\7\1\37\1\40\1\41\4\7"+
    "\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\0"+
    "\1\6\1\0\1\51\1\52\2\0\1\53\1\54\1\0"+
    "\3\7\1\55\1\56\1\7\1\57\16\7\1\60\1\61"+
    "\1\62\1\63\1\64\1\65\2\7\1\66\12\7\1\67"+
    "\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\0"+
    "\15\7\1\45\1\77\1\0\1\6\1\0\1\54\1\0"+
    "\1\54\1\100\3\7\1\101\1\102\1\103\6\7\1\104"+
    "\5\7\1\105\1\106\2\7\1\107\1\7\1\110\30\7"+
    "\2\0\1\6\1\111\1\0\1\112\4\7\1\113\1\114"+
    "\3\7\1\115\4\7\1\116\1\7\1\117\1\120\1\121"+
    "\10\7\1\122\4\7\1\123\25\7\1\45\1\77\1\0"+
    "\1\111\2\7\1\124\3\7\1\125\5\7\1\126\5\7"+
    "\1\127\40\7\1\130\2\7\1\111\1\131\2\7\1\132"+
    "\1\133\1\134\2\7\1\135\1\7\1\136\1\137\1\140"+
    "\1\141\1\142\1\143\1\144\1\145\1\146\37\7\1\147"+
    "\1\7\1\150\6\7\1\151\1\7\1\152\1\153\1\154"+
    "\1\155\2\7\1\156\24\7\1\157\1\7\1\160\1\161"+
    "\1\7\1\162\1\163\1\7\1\164\1\165\1\166\1\167"+
    "\6\7\1\170\1\7\1\171\3\7\1\172\1\7\1\173"+
    "\1\174\1\7\1\175\13\7\1\176\1\177\1\200\1\201"+
    "\20\7\1\202\1\203\7\7\1\204\1\7\1\205\1\7"+
    "\1\206\6\7\1\207\1\210\1\211\2\7\1\212\1\7"+
    "\1\213\1\7\1\214\1\7\1\215\1\216\1\7\1\217"+
    "\1\220\1\221\1\7\1\222\1\223\11\7\1\224\1\225"+
    "\4\7\1\226\3\7\1\227\2\7\1\230\1\7\1\231"+
    "\7\7\1\232\22\7\1\233\1\234\5\7\1\235\1\236"+
    "\12\7\1\237\1\240\1\241\1\242\1\7\1\243\2\7"+
    "\1\244\23\7\1\245\1\7\1\246\2\7\1\247\1\250"+
    "\5\7\1\251";

  private static int [] zzUnpackAction() {
    int [] result = new int[624];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\101\0\202\0\303\0\u0104\0\u0145\0\u0186\0\u01c7"+
    "\0\u0208\0\u0249\0\u028a\0\u02cb\0\u030c\0\u034d\0\u038e\0\u03cf"+
    "\0\u0410\0\u0451\0\u028a\0\u0492\0\u04d3\0\u0514\0\u0555\0\u0596"+
    "\0\u05d7\0\u0104\0\u0618\0\u0104\0\u0104\0\u0659\0\u069a\0\u06db"+
    "\0\u0104\0\u0104\0\u0104\0\u0104\0\u071c\0\u075d\0\u079e\0\u07df"+
    "\0\u0820\0\u0861\0\u08a2\0\u0104\0\u08e3\0\u0104\0\u0924\0\u0965"+
    "\0\u09a6\0\u09e7\0\u0a28\0\u0a69\0\u0aaa\0\u0aeb\0\u0b2c\0\u0b6d"+
    "\0\u0bae\0\u028a\0\u0bef\0\u0c30\0\u0c71\0\u0104\0\u0104\0\u0104"+
    "\0\u0cb2\0\u0cf3\0\u0d34\0\u0d75\0\u0104\0\u0104\0\u0db6\0\u0df7"+
    "\0\u0104\0\u0104\0\u0104\0\u0e38\0\u0e79\0\u034d\0\u0104\0\u0104"+
    "\0\u0eba\0\u0efb\0\u0104\0\u0f3c\0\u0f7d\0\u0fbe\0\u0fff\0\u1040"+
    "\0\u0104\0\u0104\0\u1081\0\u028a\0\u10c2\0\u1103\0\u1144\0\u1185"+
    "\0\u11c6\0\u1207\0\u1248\0\u1289\0\u12ca\0\u130b\0\u134c\0\u138d"+
    "\0\u13ce\0\u140f\0\u0104\0\u0104\0\u1450\0\u0104\0\u1491\0\u0104"+
    "\0\u14d2\0\u1513\0\u028a\0\u1554\0\u1595\0\u15d6\0\u1617\0\u1658"+
    "\0\u1699\0\u16da\0\u171b\0\u175c\0\u179d\0\u0104\0\u0104\0\u0104"+
    "\0\u0104\0\u0104\0\u0104\0\u0104\0\u0104\0\u17de\0\u181f\0\u1860"+
    "\0\u18a1\0\u18e2\0\u1923\0\u1964\0\u19a5\0\u19e6\0\u1a27\0\u1a68"+
    "\0\u1aa9\0\u1aea\0\u1b2b\0\u1b6c\0\u1bad\0\u1bee\0\u1c2f\0\u1c70"+
    "\0\u0104\0\u1cb1\0\u1cf2\0\u028a\0\u1d33\0\u1d74\0\u1db5\0\u028a"+
    "\0\u028a\0\u028a\0\u1df6\0\u1e37\0\u1e78\0\u1eb9\0\u1efa\0\u1f3b"+
    "\0\u028a\0\u1f7c\0\u1fbd\0\u1ffe\0\u203f\0\u2080\0\u0104\0\u0104"+
    "\0\u20c1\0\u2102\0\u028a\0\u2143\0\u028a\0\u2184\0\u21c5\0\u2206"+
    "\0\u2247\0\u2288\0\u22c9\0\u230a\0\u234b\0\u238c\0\u23cd\0\u240e"+
    "\0\u244f\0\u2490\0\u24d1\0\u2512\0\u2553\0\u2594\0\u25d5\0\u2616"+
    "\0\u2657\0\u2698\0\u26d9\0\u271a\0\u275b\0\u279c\0\u27dd\0\u281e"+
    "\0\u285f\0\u28a0\0\u028a\0\u28e1\0\u2922\0\u2963\0\u29a4\0\u028a"+
    "\0\u028a\0\u29e5\0\u2a26\0\u2a67\0\u028a\0\u2aa8\0\u2ae9\0\u2b2a"+
    "\0\u2b6b\0\u028a\0\u2bac\0\u028a\0\u028a\0\u028a\0\u2bed\0\u2c2e"+
    "\0\u2c6f\0\u2cb0\0\u2cf1\0\u2d32\0\u2d73\0\u2db4\0\u028a\0\u2df5"+
    "\0\u2e36\0\u2e77\0\u2eb8\0\u2ef9\0\u2f3a\0\u2f7b\0\u2fbc\0\u2ffd"+
    "\0\u303e\0\u307f\0\u30c0\0\u3101\0\u3142\0\u3183\0\u31c4\0\u3205"+
    "\0\u3246\0\u3287\0\u32c8\0\u3309\0\u334a\0\u338b\0\u33cc\0\u340d"+
    "\0\u344e\0\u0104\0\u0104\0\u348f\0\u34d0\0\u3511\0\u3552\0\u028a"+
    "\0\u3593\0\u35d4\0\u3615\0\u028a\0\u3656\0\u3697\0\u36d8\0\u3719"+
    "\0\u375a\0\u028a\0\u379b\0\u37dc\0\u381d\0\u385e\0\u389f\0\u028a"+
    "\0\u38e0\0\u3921\0\u3962\0\u39a3\0\u39e4\0\u3a25\0\u3a66\0\u3aa7"+
    "\0\u3ae8\0\u3b29\0\u3b6a\0\u3bab\0\u3bec\0\u3c2d\0\u3c6e\0\u3caf"+
    "\0\u3cf0\0\u3d31\0\u3d72\0\u3db3\0\u3df4\0\u3e35\0\u3e76\0\u3eb7"+
    "\0\u3ef8\0\u3f39\0\u3f7a\0\u3fbb\0\u3ffc\0\u403d\0\u407e\0\u40bf"+
    "\0\u028a\0\u4100\0\u4141\0\u0104\0\u028a\0\u4182\0\u41c3\0\u028a"+
    "\0\u028a\0\u028a\0\u4204\0\u4245\0\u028a\0\u4286\0\u028a\0\u028a"+
    "\0\u028a\0\u028a\0\u028a\0\u028a\0\u028a\0\u028a\0\u028a\0\u42c7"+
    "\0\u4308\0\u4349\0\u438a\0\u43cb\0\u440c\0\u444d\0\u448e\0\u44cf"+
    "\0\u4510\0\u4551\0\u4592\0\u45d3\0\u4614\0\u4655\0\u4696\0\u46d7"+
    "\0\u4718\0\u4759\0\u479a\0\u47db\0\u481c\0\u485d\0\u489e\0\u48df"+
    "\0\u4920\0\u4961\0\u49a2\0\u49e3\0\u4a24\0\u4a65\0\u028a\0\u4aa6"+
    "\0\u028a\0\u4ae7\0\u4b28\0\u4b69\0\u4baa\0\u4beb\0\u4c2c\0\u4c6d"+
    "\0\u4cae\0\u028a\0\u028a\0\u028a\0\u028a\0\u4cef\0\u4d30\0\u028a"+
    "\0\u4d71\0\u4db2\0\u4df3\0\u4e34\0\u4e75\0\u4eb6\0\u4ef7\0\u4f38"+
    "\0\u4f79\0\u4fba\0\u4ffb\0\u503c\0\u507d\0\u50be\0\u50ff\0\u5140"+
    "\0\u5181\0\u51c2\0\u5203\0\u5244\0\u028a\0\u5285\0\u028a\0\u028a"+
    "\0\u52c6\0\u028a\0\u028a\0\u5307\0\u028a\0\u028a\0\u028a\0\u028a"+
    "\0\u5348\0\u5389\0\u53ca\0\u540b\0\u544c\0\u548d\0\u028a\0\u54ce"+
    "\0\u028a\0\u550f\0\u5550\0\u5591\0\u028a\0\u55d2\0\u028a\0\u028a"+
    "\0\u5613\0\u028a\0\u5654\0\u5695\0\u56d6\0\u5717\0\u5758\0\u5799"+
    "\0\u57da\0\u581b\0\u585c\0\u589d\0\u58de\0\u028a\0\u028a\0\u028a"+
    "\0\u028a\0\u591f\0\u5960\0\u59a1\0\u59e2\0\u5a23\0\u5a64\0\u5aa5"+
    "\0\u5ae6\0\u5b27\0\u5b68\0\u5ba9\0\u5bea\0\u5c2b\0\u5c6c\0\u5cad"+
    "\0\u5cee\0\u028a\0\u028a\0\u5d2f\0\u5d70\0\u5db1\0\u5df2\0\u5e33"+
    "\0\u5e74\0\u5eb5\0\u028a\0\u5ef6\0\u028a\0\u5f37\0\u028a\0\u5f78"+
    "\0\u5fb9\0\u5ffa\0\u603b\0\u607c\0\u60bd\0\u028a\0\u60fe\0\u028a"+
    "\0\u613f\0\u6180\0\u028a\0\u61c1\0\u028a\0\u6202\0\u028a\0\u6243"+
    "\0\u028a\0\u028a\0\u6284\0\u028a\0\u62c5\0\u028a\0\u6306\0\u6347"+
    "\0\u028a\0\u6388\0\u63c9\0\u640a\0\u644b\0\u648c\0\u64cd\0\u650e"+
    "\0\u654f\0\u6590\0\u028a\0\u028a\0\u65d1\0\u6612\0\u6653\0\u6694"+
    "\0\u66d5\0\u6716\0\u6757\0\u6798\0\u028a\0\u67d9\0\u681a\0\u028a"+
    "\0\u685b\0\u028a\0\u689c\0\u68dd\0\u691e\0\u695f\0\u69a0\0\u69e1"+
    "\0\u6a22\0\u028a\0\u6a63\0\u6aa4\0\u6ae5\0\u6b26\0\u6b67\0\u6ba8"+
    "\0\u6be9\0\u6c2a\0\u6c6b\0\u6cac\0\u6ced\0\u6d2e\0\u6d6f\0\u6db0"+
    "\0\u6df1\0\u6e32\0\u6e73\0\u6eb4\0\u028a\0\u028a\0\u6ef5\0\u6f36"+
    "\0\u6f77\0\u6fb8\0\u6ff9\0\u703a\0\u028a\0\u707b\0\u70bc\0\u70fd"+
    "\0\u713e\0\u717f\0\u71c0\0\u7201\0\u7242\0\u7283\0\u72c4\0\u028a"+
    "\0\u7305\0\u028a\0\u028a\0\u7346\0\u7387\0\u73c8\0\u7409\0\u028a"+
    "\0\u744a\0\u748b\0\u74cc\0\u750d\0\u754e\0\u758f\0\u75d0\0\u7611"+
    "\0\u7652\0\u7693\0\u76d4\0\u7715\0\u7756\0\u7797\0\u77d8\0\u7819"+
    "\0\u785a\0\u789b\0\u78dc\0\u028a\0\u791d\0\u028a\0\u795e\0\u799f"+
    "\0\u028a\0\u028a\0\u79e0\0\u7a21\0\u7a62\0\u7aa3\0\u7ae4\0\u028a";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[624];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\4\1\5\1\6\1\7\1\10\1\11\1\12\2\13"+
    "\1\14\1\15\1\16\1\17\1\13\1\20\1\21\1\22"+
    "\1\13\1\5\1\23\1\13\1\24\1\25\1\26\1\27"+
    "\1\30\1\31\1\32\1\33\1\34\1\35\1\13\1\36"+
    "\1\37\1\40\1\41\1\42\1\43\1\44\1\13\1\45"+
    "\1\13\1\46\1\47\2\13\1\50\1\13\1\51\3\14"+
    "\1\52\1\53\1\14\1\54\1\55\1\56\1\57\1\60"+
    "\1\61\1\62\1\13\2\14\1\63\1\5\1\64\1\7"+
    "\1\10\1\11\1\12\2\13\1\14\1\15\1\16\1\17"+
    "\1\13\1\20\1\21\1\22\1\13\1\65\1\23\1\13"+
    "\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33"+
    "\1\34\1\35\1\13\1\36\1\37\1\40\1\41\1\42"+
    "\1\43\1\44\1\13\1\45\1\13\1\46\1\47\2\13"+
    "\1\50\1\13\1\51\3\14\1\52\1\53\1\14\1\54"+
    "\1\55\1\56\1\57\1\60\1\61\1\62\1\13\2\14"+
    "\1\4\1\5\1\6\1\66\3\5\2\13\1\5\1\67"+
    "\1\5\2\13\1\5\1\70\1\71\1\13\1\5\1\72"+
    "\2\13\1\73\1\74\1\13\1\75\1\5\1\32\1\5"+
    "\1\76\1\5\1\13\1\77\1\100\1\13\4\5\1\13"+
    "\1\101\1\13\1\102\1\103\2\13\1\50\2\13\3\5"+
    "\1\104\1\105\1\5\1\106\6\5\1\13\2\5\1\4"+
    "\203\0\1\6\101\0\1\107\1\110\60\0\1\111\100\0"+
    "\1\112\20\0\1\113\1\114\2\0\1\115\1\0\1\116"+
    "\25\0\1\117\17\0\3\115\1\0\1\120\1\115\10\0"+
    "\2\115\6\0\1\121\1\122\1\0\1\121\1\123\1\124"+
    "\2\125\43\0\3\121\2\0\1\121\10\0\2\121\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\1\14\2\0\1\14\1\123\1\124\2\125"+
    "\43\0\3\14\2\0\1\14\10\0\2\14\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\14\13\1\126\1\13\1\0\1\13"+
    "\7\0\3\13\6\0\1\124\2\0\1\124\47\0\3\124"+
    "\2\0\1\124\10\0\2\124\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\5\13\1\127\1\13\5\0\1\13"+
    "\2\0\1\13\4\0\1\130\15\13\1\0\1\13\7\0"+
    "\3\13\16\0\1\131\46\0\1\132\21\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\4\13\1\133\2\13\5\0"+
    "\1\13\2\0\1\13\4\0\1\134\1\13\1\135\11\13"+
    "\1\136\1\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\2\13\1\137\4\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\1\140\1\13\1\0"+
    "\3\13\1\0\3\13\1\141\3\13\5\0\1\142\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\1\143\1\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\2\13\1\144\1\145\3\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\1\146\1\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\2\13\1\147\13\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\2\13\1\150\1\13\1\151\2\13"+
    "\5\0\1\13\2\0\1\13\4\0\4\13\1\152\11\13"+
    "\1\0\1\13\7\0\3\13\32\0\1\153\102\0\1\154"+
    "\104\0\1\155\24\0\1\156\54\0\1\157\23\0\1\160"+
    "\21\0\5\13\1\0\2\13\1\0\3\13\1\0\4\13"+
    "\1\161\2\13\5\0\1\13\2\0\1\13\4\0\2\13"+
    "\1\162\13\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\1\163\2\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\14\13\1\164\1\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\1\165\1\13"+
    "\1\0\3\13\1\0\4\13\1\166\2\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\10\13\1\167\5\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\4\13\1\170\2\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\1\171\1\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\1\13\1\172"+
    "\14\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\3\13\1\173\3\13\5\0"+
    "\1\13\2\0\1\13\4\0\1\13\1\174\1\175\13\13"+
    "\1\0\1\13\7\0\3\13\65\0\1\176\100\0\1\177"+
    "\100\0\1\200\4\0\1\201\73\0\1\202\100\0\1\203"+
    "\6\0\1\204\71\0\1\205\13\0\1\63\1\0\1\206"+
    "\17\0\1\65\56\0\1\206\1\0\1\64\17\0\1\65"+
    "\56\0\2\65\1\0\76\65\3\0\1\107\1\110\102\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\1\207\13\13\1\126\1\13"+
    "\1\0\1\13\7\0\3\13\6\0\4\13\1\210\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\14\13\1\136\1\13\1\0\1\13\7\0"+
    "\3\13\6\0\4\13\1\211\1\0\2\13\1\0\3\13"+
    "\1\0\2\13\1\137\1\212\3\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\1\213\1\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\6\13\1\214\3\13"+
    "\1\215\1\13\1\216\1\13\1\0\1\13\7\0\1\13"+
    "\1\217\1\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\2\13\1\144\4\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\2\13\1\220\4\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\14\13"+
    "\1\164\1\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\1\165\1\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\3\13\1\221\3\13\5\0\1\13\2\0\1\13\4\0"+
    "\2\13\1\222\13\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\2\13\1\175\3\13\1\223"+
    "\7\13\1\0\1\13\7\0\3\13\2\107\1\0\76\107"+
    "\4\224\1\225\74\224\6\0\1\121\1\226\1\0\1\121"+
    "\1\0\1\124\2\125\43\0\3\121\2\0\1\121\10\0"+
    "\2\121\6\0\1\115\2\0\1\115\1\0\1\124\2\125"+
    "\43\0\3\115\2\0\1\115\10\0\2\115\6\0\1\121"+
    "\2\0\1\121\1\0\1\124\2\125\43\0\3\121\2\0"+
    "\1\121\10\0\2\121\6\0\1\227\1\0\2\227\1\0"+
    "\1\230\2\227\1\0\1\227\7\0\1\227\12\0\1\227"+
    "\15\0\5\227\1\0\1\227\7\0\3\227\6\0\1\124"+
    "\2\0\1\124\2\0\2\125\1\0\1\231\41\0\3\124"+
    "\2\0\1\124\10\0\2\124\5\0\1\232\1\233\2\0"+
    "\1\233\4\0\1\232\42\0\3\233\2\0\1\233\10\0"+
    "\2\233\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\13\13\1\234"+
    "\2\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\6\13\1\235\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\4\13"+
    "\1\236\2\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\5\13\1\237\1\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\3\13"+
    "\1\240\3\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\13\13\1\241\2\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\3\13"+
    "\1\242\3\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\1\13\1\243\3\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\4\13\1\244\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\1\13\1\245\1\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\2\13\1\246"+
    "\4\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\2\13\1\247\13\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\3\13\1\250"+
    "\3\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\2\13\1\251\4\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\2\13\1\252\13\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\3\13\1\253\1\254\2\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\7\13\1\255\6\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\1\13\1\256\14\13\1\0\1\13\7\0\3\13"+
    "\65\0\1\257\100\0\1\260\21\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\6\13\1\261\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\1\262\15\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\13\13"+
    "\1\263\2\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\264\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\3\13"+
    "\1\265\3\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\1\13\1\266\14\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\2\13"+
    "\1\267\4\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\1\270\2\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\6\13\1\271"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\1\272\1\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\2\13\1\273\4\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\2\13\1\274"+
    "\13\13\1\0\1\13\7\0\3\13\1\206\1\0\1\206"+
    "\17\0\1\65\64\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\1\13"+
    "\1\275\14\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\1\276\15\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\6\13\1\277\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\1\13\1\300\14\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\4\13"+
    "\1\301\2\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\12\13\1\302\1\13\1\303\1\304\1\0\1\13"+
    "\7\0\1\13\1\305\1\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\2\13\1\306\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\13\13\1\307\2\13\1\0"+
    "\1\13\7\0\3\13\6\0\4\13\1\310\1\0\2\13"+
    "\1\0\3\13\1\0\6\13\1\311\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\2\13\1\312\13\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\1\13\1\313\14\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\3\13\1\314"+
    "\3\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\3\13\1\315\3\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\4\224"+
    "\1\316\74\224\4\225\1\317\74\225\6\0\1\320\1\0"+
    "\2\320\1\0\1\230\2\320\1\0\1\320\7\0\1\320"+
    "\12\0\1\320\15\0\5\320\1\0\1\320\7\0\3\320"+
    "\6\0\1\227\1\0\2\227\1\123\1\321\2\227\1\0"+
    "\1\227\2\322\5\0\1\227\12\0\1\227\15\0\5\227"+
    "\1\0\1\227\7\0\3\227\6\0\1\321\1\0\2\321"+
    "\2\0\2\321\1\0\1\321\7\0\1\321\12\0\1\321"+
    "\15\0\5\321\1\0\1\321\7\0\3\321\6\0\1\233"+
    "\2\0\1\233\47\0\3\233\2\0\1\233\10\0\2\233"+
    "\6\0\1\233\2\0\1\233\5\0\1\231\41\0\3\233"+
    "\2\0\1\233\10\0\2\233\6\0\5\13\1\0\1\323"+
    "\1\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\15\13\1\324\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\5\13\1\325\1\326\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\2\13\1\327\4\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\1\330\1\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\1\331\1\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\4\13\1\332\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\7\13\1\333\6\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\4\13\1\334"+
    "\2\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\1\13\1\335\1\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\4\13\1\336\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\2\13\1\337\4\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\1\13\1\340\1\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\2\13\1\341\4\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\1\342\1\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\2\13\1\343\4\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\13\13\1\344\1\345\1\13\1\0\1\346"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\5\13\1\347\1\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\13\13\1\350\1\351\1\13\1\0"+
    "\1\352\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\4\13\1\353\2\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\354\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\4\13\1\355\2\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\356\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\5\13\1\357"+
    "\1\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\1\360\2\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\361\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\10\13\1\362\5\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\3\13\1\363\12\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\11\13\1\364\4\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\12\13\1\365\3\13\1\0\1\13\7\0\2\13"+
    "\1\366\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\13\13\1\367"+
    "\2\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\4\13\1\370\2\13\5\0"+
    "\1\13\2\0\1\13\4\0\12\13\1\371\3\13\1\0"+
    "\1\13\7\0\3\13\6\0\4\13\1\372\1\0\2\13"+
    "\1\0\3\13\1\0\6\13\1\373\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\4\13\1\374\1\0\2\13\1\0\1\375\2\13\1\0"+
    "\6\13\1\376\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\4\13\1\377\1\0"+
    "\2\13\1\0\1\u0100\2\13\1\0\6\13\1\u0101\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\1\u0102\1\u0103"+
    "\14\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\1\u0104\1\u0105\14\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\3\13\1\u0106\3\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\2\13\1\u0107\4\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\5\13\1\u0108"+
    "\10\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\4\13\1\u0109\2\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\3\224\1\u010a\1\316\74\224\3\225\1\u010b\1\317"+
    "\74\225\6\0\1\320\1\0\2\320\1\0\1\321\2\320"+
    "\1\0\1\320\2\322\5\0\1\320\12\0\1\320\15\0"+
    "\5\320\1\0\1\320\7\0\3\320\6\0\1\321\1\0"+
    "\2\321\2\0\2\321\1\0\1\321\2\322\5\0\1\321"+
    "\12\0\1\321\15\0\5\321\1\0\1\321\7\0\3\321"+
    "\5\0\1\u010c\1\u010d\2\0\1\u010d\4\0\1\u010c\42\0"+
    "\3\u010d\2\0\1\u010d\10\0\2\u010d\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\5\13\1\u010e\1\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\2\13\1\u010f\4\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\1\u0110\1\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\4\13\1\u0111\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\3\13\1\u0112\3\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\1\13\1\u0113\14\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\u0114\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\u0115\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\1\13\1\u0116\14\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\5\13\1\u0117\1\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\u0118\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\1\13\1\u0119"+
    "\14\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\1\u011a\1\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\1\13\1\u011b\3\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\1\13\1\u011c\3\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\1\13\1\u011d\3\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\4\13\1\u011e\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\4\13\1\u011f"+
    "\2\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\5\13\1\u0120\10\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\4\13\1\u0121"+
    "\2\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\2\13\1\u0122\13\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\2\13\1\u0123"+
    "\4\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\1\u0124\6\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\4\13\1\u0125\2\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\1\u0126\6\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\15\13\1\u0127\1\0\1\13\7\0\3\13"+
    "\6\0\4\13\1\u0128\1\0\2\13\1\0\1\u0129\2\13"+
    "\1\0\6\13\1\u012a\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\4\13\1\u012b"+
    "\1\0\2\13\1\0\1\u012c\2\13\1\0\6\13\1\u012d"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\12\13"+
    "\1\u012e\1\13\1\u012f\1\13\1\0\1\13\7\0\1\13"+
    "\1\u0130\1\13\6\0\1\u0131\4\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\1\u0132\1\u0133\14\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\1\u0134\1\u0135"+
    "\14\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\1\13\1\u0136\14\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\5\13\1\u0137\1\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\1\13\1\u0138\14\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\1\13\1\u0139"+
    "\14\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\5\13\1\u013a\1\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\1\13\1\u013b"+
    "\14\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\2\13\1\u013c\13\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\1\u013d\15\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\2\13\1\u013e\13\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\1\u013f\15\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\4\13\1\u0140\2\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\1\u0141\1\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\6\13"+
    "\1\u0142\7\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\1\13"+
    "\1\u0143\1\13\6\0\1\u010d\2\0\1\u010d\47\0\3\u010d"+
    "\2\0\1\u010d\10\0\2\u010d\6\0\1\u010d\2\0\1\u010d"+
    "\5\0\1\u0144\41\0\3\u010d\2\0\1\u010d\10\0\2\u010d"+
    "\6\0\5\13\1\0\1\u0145\1\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\10\13\1\u0146\5\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\3\13\1\u0147"+
    "\3\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\1\u0148\15\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\u0149\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\2\13"+
    "\1\u014a\4\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\u014b"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\1\u014c\1\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\10\13\1\u014d"+
    "\5\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\1\u014e\15\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\13\13\1\u014f\1\u0150"+
    "\1\13\1\0\1\u0151\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\13\13\1\u0152\1\u0153\1\13\1\0\1\u0154"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\13\13"+
    "\1\u0155\1\u0156\1\13\1\0\1\u0157\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\5\13\1\u0158"+
    "\1\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\3\13\1\u0159\3\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\6\13\1\u015a"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\3\13\1\u015b\3\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\1\13\1\u015c\14\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\u015d\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\2\13\1\u015e\4\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\4\13\1\u015f\11\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\12\13\1\u0160\3\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\1\13\1\u0161\14\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\5\13\1\u0162\1\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\1\13\1\u0163\14\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\1\13\1\u0164\14\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\5\13"+
    "\1\u0165\1\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\1\13\1\u0166\14\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\2\13\1\u0167\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\13\13\1\u0168\2\13\1\0\1\13\7\0\3\13\6\0"+
    "\4\13\1\u0169\1\0\2\13\1\0\3\13\1\0\6\13"+
    "\1\u016a\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\4\13\1\u016b\2\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\2\13\1\u016c\13\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\1\u016d\15\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\2\13\1\u016e\13\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\1\u016f"+
    "\15\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\1\u0170\15\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\2\13\1\u0171\13\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\1\u0172\15\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\1\u0173\15\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\2\13"+
    "\1\u0174\13\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\1\u0175\15\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\3\13\1\u0176\3\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\2\13\1\u0177\4\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\3\13\1\u0178\3\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\2\13\1\u0179\4\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\6\13\1\u017a"+
    "\7\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\3\13\1\u017b\3\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\4\13\1\u017c\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\3\13\1\u017d\3\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\1\u017e\1\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\1\u017f\2\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\3\13\1\u0180\3\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\4\13\1\u0181\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\2\13\1\u0182\4\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\11\13\1\u0183"+
    "\4\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\2\13\1\u0184\4\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\7\13\1\u0185"+
    "\6\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\2\13\1\u0186\13\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\2\13\1\u0187"+
    "\13\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\1\u0188\1\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\3\13"+
    "\1\u0189\3\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\1\u018a\4\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\1\u018b\15\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\2\13"+
    "\1\u018c\13\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\1\u018d\15\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\1\u018e\15\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\2\13\1\u018f\13\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\1\u0190\15\13\1\0"+
    "\1\13\7\0\3\13\6\0\4\13\1\u0191\1\0\2\13"+
    "\1\0\1\u0192\2\13\1\0\6\13\1\u0193\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\4\13\1\u0194\1\0\2\13\1\0\1\u0195\2\13"+
    "\1\0\6\13\1\u0196\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\1\u0197\1\u0198\14\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\1\u0199\1\u019a"+
    "\14\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\13\13\1\u019b\2\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\3\13\1\u019c\3\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\2\13\1\u019d\4\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\3\13\1\u019e\3\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\2\13\1\u019f\4\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\2\13\1\u01a0\4\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\4\13\1\u01a1\2\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\2\13\1\u01a2\4\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\2\13\1\u01a3\4\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\4\13\1\u01a4\2\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\2\13\1\u01a5\4\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\7\13\1\u01a6"+
    "\6\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\7\13\1\u01a7\6\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\1\u01a8\1\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\2\13\1\u01a9\13\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\1\u01aa\15\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\2\13\1\u01ab\13\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\1\u01ac\6\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\6\13\1\u01ad\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\1\u01ae\6\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\1\u01af\1\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\1\13\1\u01b0"+
    "\14\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\1\u01b1\15\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\1\u01b2\15\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\1\13\1\u01b3\14\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\1\u01b4\2\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\2\13\1\u01b5\4\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\4\13\1\u01b6\2\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\2\13\1\u01b7\4\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\2\13\1\u01b8\4\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\4\13\1\u01b9\2\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\2\13\1\u01ba\4\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\1\13"+
    "\1\u01bb\14\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\5\13\1\u01bc\1\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\1\13"+
    "\1\u01bd\14\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\1\13\1\u01be\14\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\5\13\1\u01bf\1\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\1\13\1\u01c0\14\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\2\13"+
    "\1\u01c1\13\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\1\u01c2\15\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\2\13\1\u01c3"+
    "\13\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\1\u01c4\15\13\1\0\1\13\7\0\3\13"+
    "\6\0\4\13\1\u01c5\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\7\13\1\u01c6\6\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\7\13\1\u01c7\6\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\2\13\1\u01c8\4\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\2\13\1\u01c9"+
    "\4\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\4\13\1\u01ca\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\2\13\1\u01cb\13\13\1\0\1\13"+
    "\7\0\3\13\6\0\4\13\1\u01cc\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\6\13\1\u01cd\5\0\1\13"+
    "\2\0\1\u01ce\4\0\7\13\1\u01cf\1\13\1\u01d0\1\u01d1"+
    "\1\u01d2\1\u01d3\1\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\6\13\1\u01d4"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\u01d5\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\1\u01d6\15\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\6\13\1\u01d7"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\2\13\1\u01d8\4\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\5\13\1\u01d9\1\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\2\13\1\u01da\4\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\2\13\1\u01db\4\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\1\u01dc"+
    "\15\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\2\13\1\u01dd\13\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\1\u01de\15\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\1\u01df\15\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\2\13\1\u01e0\13\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\1\u01e1\15\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\3\13\1\u01e2\3\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\2\13\1\u01e3\4\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\3\13\1\u01e4\3\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\2\13\1\u01e5\4\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\1\u01e6\15\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\1\13\1\u01e7"+
    "\1\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\3\13\1\u01e8\3\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\6\13\1\u01e9"+
    "\7\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\2\13\1\u01ea\4\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\4\13\1\u01eb\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\4\13\1\u01ec\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\1\u01ed\1\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\11\13"+
    "\1\u01ee\4\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\11\13\1\u01ef\4\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\11\13"+
    "\1\u01f0\4\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\1\u01f1\1\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\2\13\1\u01f2"+
    "\13\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\6\13\1\u01f3\7\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\2\13\1\u01f4\4\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\1\u01f5\1\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\2\13\1\u01f6\13\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\2\13\1\u01f7\4\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\4\13"+
    "\1\u01f8\2\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\2\13\1\u01f9\4\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\2\13"+
    "\1\u01fa\4\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\4\13\1\u01fb\2\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\2\13"+
    "\1\u01fc\4\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\7\13\1\u01fd\6\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\7\13\1\u01fe\6\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\2\13\1\u01ff\13\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\7\13\1\u0200\6\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\10\13\1\u0201\5\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\2\13\1\u0202\13\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\15\13\1\u0203\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\5\13\1\u0204"+
    "\1\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\1\13\1\u0205\1\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\1\u0206\6\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\3\13\1\u0207\3\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\7\13\1\u0208\6\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\4\13\1\u0209\2\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\4\13\1\u020a\2\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\2\13\1\u020b\4\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\2\13\1\u020c\4\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\1\u020d\6\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\3\13\1\u020e\3\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\1\u020f\6\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\3\13\1\u0210\3\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\1\u0211\1\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\2\13\1\u0212\4\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\2\13\1\u0213"+
    "\4\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\4\13\1\u0214\2\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\2\13\1\u0215"+
    "\4\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\1\13\1\u0216\1\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\1\u0217\15\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\2\13\1\u0218\4\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\6\13\1\u0219\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\7\13\1\u021a"+
    "\6\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\6\13\1\u021b\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\4\13"+
    "\1\u021c\2\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\1\u021d\6\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\1\13\1\u021e\14\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\10\13\1\u021f\5\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\3\13\1\u0220"+
    "\3\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\4\13\1\u0221\2\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\2\13\1\u0222"+
    "\4\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\3\13\1\u0223\3\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\3\13\1\u0224"+
    "\3\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\6\13\1\u0225\7\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\4\13\1\u0226"+
    "\2\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\6\13\1\u0227\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\1\u0228\6\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\3\13\1\u0229\3\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\3\13\1\u022a\3\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\6\13\1\u022b"+
    "\7\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\6\13\1\u022c\7\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\1\u022d\1\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\3\13\1\u022e\3\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\4\13"+
    "\1\u022f\2\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\u0230"+
    "\4\0\7\13\1\u0231\3\13\1\u0232\2\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\4\13\1\u0233\2\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\1\13\1\u0234\14\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\15\13"+
    "\1\u0235\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\15\13\1\u0236\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\1\u0237"+
    "\6\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\3\13\1\u0238\3\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\7\13\1\u0239\6\13\1\0"+
    "\1\13\7\0\3\13\6\0\4\13\1\u023a\1\0\2\13"+
    "\1\0\3\13\1\0\7\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\4\13"+
    "\1\u023b\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\11\13\1\u023c"+
    "\4\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\u023d\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\6\13\1\u023e"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\12\13"+
    "\1\u023f\1\u0240\1\u0241\1\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\4\13"+
    "\1\u0242\2\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\1\13\1\u0243\1\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\2\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\15\13\1\u0244\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\5\13\1\u0245\1\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\1\u0246\6\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\2\13"+
    "\1\u0247\13\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\11\13\1\u0248\4\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\11\13"+
    "\1\u0249\4\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\7\13\5\0\1\13"+
    "\2\0\1\13\4\0\11\13\1\u024a\4\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\u024b\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\5\13\1\u024c\1\13\5\0\1\13"+
    "\2\0\1\13\4\0\16\13\1\0\1\13\7\0\3\13"+
    "\6\0\5\13\1\0\1\u024d\1\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\2\13\1\u024e\4\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\4\13\1\u024f"+
    "\2\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\1\u0250\15\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\1\u0251\6\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\1\u0252\1\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\16\13"+
    "\1\0\1\13\7\0\3\13\6\0\5\13\1\0\2\13"+
    "\1\0\3\13\1\0\1\u0253\6\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\13\2\0\1\13\4\0\1\13\1\u0254\14\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\3\13\1\u0255\3\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\4\13\1\u0256"+
    "\2\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\11\13\1\u0257\4\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\4\13\1\u0258"+
    "\2\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\6\13\1\u0259\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\3\13\1\u025a\3\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\3\13\1\u025b\3\13\5\0\1\13\2\0\1\13"+
    "\4\0\16\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\1\u025c\6\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\3\13\1\u025d\3\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\4\13\1\u025e\2\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\4\13\1\u025f\2\13\5\0\1\13\2\0\1\13\4\0"+
    "\16\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\3\13\1\u0260\3\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\13\13\1\u0261"+
    "\2\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\3\13\1\u0262\3\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\7\13\1\u0263"+
    "\6\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\u0264\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\4\13\1\u0265"+
    "\2\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\7\13\5\0\1\13\2\0\1\13\4\0"+
    "\11\13\1\u0266\4\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\4\13\1\u0267"+
    "\2\13\5\0\1\13\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\1\13\1\u0268\1\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\2\13\1\0\3\13\1\0\7\13\5\0"+
    "\1\u0269\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\u026a\2\0\1\13\4\0\16\13\1\0"+
    "\1\13\7\0\3\13\6\0\5\13\1\0\2\13\1\0"+
    "\3\13\1\0\5\13\1\u026b\1\13\5\0\1\13\2\0"+
    "\1\13\4\0\16\13\1\0\1\13\7\0\3\13\6\0"+
    "\5\13\1\0\1\u026c\1\13\1\0\3\13\1\0\7\13"+
    "\5\0\1\13\2\0\1\13\4\0\16\13\1\0\1\13"+
    "\7\0\3\13\6\0\5\13\1\0\2\13\1\0\3\13"+
    "\1\0\7\13\5\0\1\13\2\0\1\13\4\0\11\13"+
    "\1\u026d\4\13\1\0\1\13\7\0\3\13\6\0\5\13"+
    "\1\0\2\13\1\0\3\13\1\0\1\u026e\6\13\5\0"+
    "\1\13\2\0\1\13\4\0\16\13\1\0\1\13\7\0"+
    "\3\13\6\0\5\13\1\0\2\13\1\0\3\13\1\0"+
    "\7\13\5\0\1\13\2\0\1\13\4\0\13\13\1\u026f"+
    "\2\13\1\0\1\13\7\0\3\13\6\0\5\13\1\0"+
    "\2\13\1\0\3\13\1\0\7\13\5\0\1\13\2\0"+
    "\1\13\4\0\11\13\1\u0270\4\13\1\0\1\13\7\0"+
    "\3\13";

  private static int [] zzUnpackTrans() {
    int [] result = new int[31525];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\3\0\1\1\1\11\24\1\1\11\1\1\2\11\3\1"+
    "\4\11\7\1\1\11\1\1\1\11\17\1\3\11\4\1"+
    "\2\11\2\1\3\11\1\0\1\1\1\0\2\11\2\0"+
    "\1\11\1\1\1\0\3\1\2\11\20\1\2\11\1\1"+
    "\1\11\1\1\1\11\15\1\10\11\1\0\17\1\1\0"+
    "\1\1\1\0\1\11\1\0\24\1\2\11\35\1\2\0"+
    "\2\1\1\0\67\1\2\11\1\0\67\1\1\11\u012c\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[624];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  private static final class State {
    final int state;

    private State(int state) {
      this.state = state;
    }
  }

  protected final Stack<State> myStateStack = new Stack<>();

  private void pushState(int state) {
    myStateStack.push(new State(yystate()));
    yybegin(state);
  }

  private void popState() {
    State state = myStateStack.pop();
    yybegin(state.state);
  }

  public _WgslLexer() {
    this((java.io.Reader)null);
  }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public _WgslLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      {@code false}, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position {@code pos} from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      if (zzMarkedPosL > zzStartRead) {
        switch (zzBufferL.charAt(zzMarkedPosL-1)) {
        case '\n':
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':  // fall through
          zzAtBOL = true;
          break;
        case '\r': 
          if (zzMarkedPosL < zzEndReadL)
            zzAtBOL = zzBufferL.charAt(zzMarkedPosL) != '\n';
          else if (zzAtEOF)
            zzAtBOL = false;
          else {
            boolean eof = zzRefill();
            zzMarkedPosL = zzMarkedPos;
            zzEndReadL = zzEndRead;
            zzBufferL = zzBuffer;
            if (eof) 
              zzAtBOL = false;
            else 
              zzAtBOL = zzBufferL.charAt(zzMarkedPosL) != '\n';
          }
          break;
        default:
          zzAtBOL = false;
        }
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      if (zzAtBOL)
        zzState = ZZ_LEXSTATE[zzLexicalState+1];
      else
        zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return WHITE_SPACE;
            } 
            // fall through
          case 170: break;
          case 2: 
            { return BAD_CHARACTER;
            } 
            // fall through
          case 171: break;
          case 3: 
            { return FORWARD_SLASH;
            } 
            // fall through
          case 172: break;
          case 4: 
            { return STAR;
            } 
            // fall through
          case 173: break;
          case 5: 
            { return MINUS;
            } 
            // fall through
          case 174: break;
          case 6: 
            { return INT_LITERAL;
            } 
            // fall through
          case 175: break;
          case 7: 
            { return IDENT;
            } 
            // fall through
          case 176: break;
          case 8: 
            { return PERIOD;
            } 
            // fall through
          case 177: break;
          case 9: 
            { return PLUS;
            } 
            // fall through
          case 178: break;
          case 10: 
            { return UNDERSCORE;
            } 
            // fall through
          case 179: break;
          case 11: 
            { return BRACKET_LEFT;
            } 
            // fall through
          case 180: break;
          case 12: 
            { return COMMA;
            } 
            // fall through
          case 181: break;
          case 13: 
            { return BRACKET_RIGHT;
            } 
            // fall through
          case 182: break;
          case 14: 
            { return PAREN_LEFT;
            } 
            // fall through
          case 183: break;
          case 15: 
            { return PAREN_RIGHT;
            } 
            // fall through
          case 184: break;
          case 16: 
            { return LESS_THAN;
            } 
            // fall through
          case 185: break;
          case 17: 
            { return GREATER_THAN;
            } 
            // fall through
          case 186: break;
          case 18: 
            { return BRACE_LEFT;
            } 
            // fall through
          case 187: break;
          case 19: 
            { return BRACE_RIGHT;
            } 
            // fall through
          case 188: break;
          case 20: 
            { return SEMICOLON;
            } 
            // fall through
          case 189: break;
          case 21: 
            { return AT;
            } 
            // fall through
          case 190: break;
          case 22: 
            { return EQUAL;
            } 
            // fall through
          case 191: break;
          case 23: 
            { return COLON;
            } 
            // fall through
          case 192: break;
          case 24: 
            { return BANG;
            } 
            // fall through
          case 193: break;
          case 25: 
            { return TILDE;
            } 
            // fall through
          case 194: break;
          case 26: 
            { return AND;
            } 
            // fall through
          case 195: break;
          case 27: 
            { return MODULO;
            } 
            // fall through
          case 196: break;
          case 28: 
            { return OR;
            } 
            // fall through
          case 197: break;
          case 29: 
            { return XOR;
            } 
            // fall through
          case 198: break;
          case 30: 
            { return PREPROCESSOR_DECLARATION;
            } 
            // fall through
          case 199: break;
          case 31: 
            { popState(); return PAREN_LEFT;
            } 
            // fall through
          case 200: break;
          case 32: 
            { return TYPE_LESS_THAN;
            } 
            // fall through
          case 201: break;
          case 33: 
            { popState(); return TYPE_GREATER_THAN;
            } 
            // fall through
          case 202: break;
          case 34: 
            { popState(); return EQUAL;
            } 
            // fall through
          case 203: break;
          case 35: 
            { popState(); return COLON;
            } 
            // fall through
          case 204: break;
          case 36: 
            { return LINE_COMMENT;
            } 
            // fall through
          case 205: break;
          case 37: 
            { return BLOCK_COMMENT;
            } 
            // fall through
          case 206: break;
          case 38: 
            { return DIVISION_EQUAL;
            } 
            // fall through
          case 207: break;
          case 39: 
            { return TIMES_EQUAL;
            } 
            // fall through
          case 208: break;
          case 40: 
            { return MINUS_MINUS;
            } 
            // fall through
          case 209: break;
          case 41: 
            { return ARROW;
            } 
            // fall through
          case 210: break;
          case 42: 
            { return MINUS_EQUAL;
            } 
            // fall through
          case 211: break;
          case 43: 
            { return UINT_LITERAL;
            } 
            // fall through
          case 212: break;
          case 44: 
            { return DECIMAL_FLOAT_LITERAL;
            } 
            // fall through
          case 213: break;
          case 45: 
            { return PLUS_PLUS;
            } 
            // fall through
          case 214: break;
          case 46: 
            { return PLUS_EQUAL;
            } 
            // fall through
          case 215: break;
          case 47: 
            { return FN;
            } 
            // fall through
          case 216: break;
          case 48: 
            { return ATTR_LEFT;
            } 
            // fall through
          case 217: break;
          case 49: 
            { return ATTR_RIGHT;
            } 
            // fall through
          case 218: break;
          case 50: 
            { return SHIFT_LEFT;
            } 
            // fall through
          case 219: break;
          case 51: 
            { return LESS_THAN_EQUAL;
            } 
            // fall through
          case 220: break;
          case 52: 
            { return SHIFT_RIGHT;
            } 
            // fall through
          case 221: break;
          case 53: 
            { return GREATER_THAN_EQUAL;
            } 
            // fall through
          case 222: break;
          case 54: 
            { return IF;
            } 
            // fall through
          case 223: break;
          case 55: 
            { return EQUAL_EQUAL;
            } 
            // fall through
          case 224: break;
          case 56: 
            { return NOT_EQUAL;
            } 
            // fall through
          case 225: break;
          case 57: 
            { return AND_EQUAL;
            } 
            // fall through
          case 226: break;
          case 58: 
            { return AND_AND;
            } 
            // fall through
          case 227: break;
          case 59: 
            { return MODULO_EQUAL;
            } 
            // fall through
          case 228: break;
          case 60: 
            { return OR_EQUAL;
            } 
            // fall through
          case 229: break;
          case 61: 
            { return OR_OR;
            } 
            // fall through
          case 230: break;
          case 62: 
            { return XOR_EQUAL;
            } 
            // fall through
          case 231: break;
          case 63: 
            { return DOC_COMMENT;
            } 
            // fall through
          case 232: break;
          case 64: 
            { return UINT32;
            } 
            // fall through
          case 233: break;
          case 65: 
            { return FOR;
            } 
            // fall through
          case 234: break;
          case 66: 
            { return FLOAT32;
            } 
            // fall through
          case 235: break;
          case 67: 
            { pushState(TYPE_SPEC); return POINTER;
            } 
            // fall through
          case 236: break;
          case 68: 
            { return LET;
            } 
            // fall through
          case 237: break;
          case 69: 
            { return SHIFT_LEFT_EQUAL;
            } 
            // fall through
          case 238: break;
          case 70: 
            { return SHIFT_RIGHT_EQUAL;
            } 
            // fall through
          case 239: break;
          case 71: 
            { return INT32;
            } 
            // fall through
          case 240: break;
          case 72: 
            { pushState(TYPE_SPEC); return VAR;
            } 
            // fall through
          case 241: break;
          case 73: 
            { return HEX_FLOAT_LITERAL;
            } 
            // fall through
          case 242: break;
          case 74: 
            { return ELSE;
            } 
            // fall through
          case 243: break;
          case 75: 
            { return TRUE;
            } 
            // fall through
          case 244: break;
          case 76: 
            { return TYPE;
            } 
            // fall through
          case 245: break;
          case 77: 
            { return LOOP;
            } 
            // fall through
          case 246: break;
          case 78: 
            { return CASE;
            } 
            // fall through
          case 247: break;
          case 79: 
            { pushState(TYPE_SPEC); return VEC2;
            } 
            // fall through
          case 248: break;
          case 80: 
            { pushState(TYPE_SPEC); return VEC3;
            } 
            // fall through
          case 249: break;
          case 81: 
            { pushState(TYPE_SPEC); return VEC4;
            } 
            // fall through
          case 250: break;
          case 82: 
            { return BOOL;
            } 
            // fall through
          case 251: break;
          case 83: 
            { return READ;
            } 
            // fall through
          case 252: break;
          case 84: 
            { return FALSE;
            } 
            // fall through
          case 253: break;
          case 85: 
            { pushState(TYPE_SPEC); return ARRAY;
            } 
            // fall through
          case 254: break;
          case 86: 
            { return WHILE;
            } 
            // fall through
          case 255: break;
          case 87: 
            { return BREAK;
            } 
            // fall through
          case 256: break;
          case 88: 
            { return WRITE;
            } 
            // fall through
          case 257: break;
          case 89: 
            { return ENABLE;
            } 
            // fall through
          case 258: break;
          case 90: 
            { return RETURN;
            } 
            // fall through
          case 259: break;
          case 91: 
            { pushState(TYPE_SPEC); return ATOMIC;
            } 
            // fall through
          case 260: break;
          case 92: 
            { return STRUCT;
            } 
            // fall through
          case 261: break;
          case 93: 
            { return SWITCH;
            } 
            // fall through
          case 262: break;
          case 94: 
            { pushState(TYPE_SPEC); return MAT2X2;
            } 
            // fall through
          case 263: break;
          case 95: 
            { pushState(TYPE_SPEC); return MAT2X3;
            } 
            // fall through
          case 264: break;
          case 96: 
            { pushState(TYPE_SPEC); return MAT2X4;
            } 
            // fall through
          case 265: break;
          case 97: 
            { pushState(TYPE_SPEC); return MAT3X2;
            } 
            // fall through
          case 266: break;
          case 98: 
            { pushState(TYPE_SPEC); return MAT3X3;
            } 
            // fall through
          case 267: break;
          case 99: 
            { pushState(TYPE_SPEC); return MAT3X4;
            } 
            // fall through
          case 268: break;
          case 100: 
            { pushState(TYPE_SPEC); return MAT4X2;
            } 
            // fall through
          case 269: break;
          case 101: 
            { pushState(TYPE_SPEC); return MAT4X3;
            } 
            // fall through
          case 270: break;
          case 102: 
            { pushState(TYPE_SPEC); return MAT4X4;
            } 
            // fall through
          case 271: break;
          case 103: 
            { return R8UINT;
            } 
            // fall through
          case 272: break;
          case 104: 
            { return R8SINT;
            } 
            // fall through
          case 273: break;
          case 105: 
            { return SAMPLER;
            } 
            // fall through
          case 274: break;
          case 106: 
            { return DEFAULT;
            } 
            // fall through
          case 275: break;
          case 107: 
            { return DISCARD;
            } 
            // fall through
          case 276: break;
          case 108: 
            { pushState(TYPE_SPEC); return BITCAST;
            } 
            // fall through
          case 277: break;
          case 109: 
            { return UNIFORM;
            } 
            // fall through
          case 278: break;
          case 110: 
            { return PRIVATE;
            } 
            // fall through
          case 279: break;
          case 111: 
            { return RG8UINT;
            } 
            // fall through
          case 280: break;
          case 112: 
            { return RG8SINT;
            } 
            // fall through
          case 281: break;
          case 113: 
            { return R16UINT;
            } 
            // fall through
          case 282: break;
          case 114: 
            { return R16SINT;
            } 
            // fall through
          case 283: break;
          case 115: 
            { return R32UINT;
            } 
            // fall through
          case 284: break;
          case 116: 
            { return R32SINT;
            } 
            // fall through
          case 285: break;
          case 117: 
            { return R8UNORM;
            } 
            // fall through
          case 286: break;
          case 118: 
            { return R8SNORM;
            } 
            // fall through
          case 287: break;
          case 119: 
            { return STORAGE;
            } 
            // fall through
          case 288: break;
          case 120: 
            { return CONTINUE;
            } 
            // fall through
          case 289: break;
          case 121: 
            { return FUNCTION;
            } 
            // fall through
          case 290: break;
          case 122: 
            { return RG16UINT;
            } 
            // fall through
          case 291: break;
          case 123: 
            { return RG16SINT;
            } 
            // fall through
          case 292: break;
          case 124: 
            { return RG32UINT;
            } 
            // fall through
          case 293: break;
          case 125: 
            { return RG32SINT;
            } 
            // fall through
          case 294: break;
          case 126: 
            { return RG8UNORM;
            } 
            // fall through
          case 295: break;
          case 127: 
            { return RG8SNORM;
            } 
            // fall through
          case 296: break;
          case 128: 
            { return R16FLOAT;
            } 
            // fall through
          case 297: break;
          case 129: 
            { return R32FLOAT;
            } 
            // fall through
          case 298: break;
          case 130: 
            { return RG16FLOAT;
            } 
            // fall through
          case 299: break;
          case 131: 
            { return RG32FLOAT;
            } 
            // fall through
          case 300: break;
          case 132: 
            { return RGBA8UINT;
            } 
            // fall through
          case 301: break;
          case 133: 
            { return RGBA8SINT;
            } 
            // fall through
          case 302: break;
          case 134: 
            { return WORKGROUP;
            } 
            // fall through
          case 303: break;
          case 135: 
            { pushState(TYPE_SPEC); return TEXTURE_1D;
            } 
            // fall through
          case 304: break;
          case 136: 
            { pushState(TYPE_SPEC); return TEXTURE_2D;
            } 
            // fall through
          case 305: break;
          case 137: 
            { pushState(TYPE_SPEC); return TEXTURE_3D;
            } 
            // fall through
          case 306: break;
          case 138: 
            { return CONTINUING;
            } 
            // fall through
          case 307: break;
          case 139: 
            { return READ_WRITE;
            } 
            // fall through
          case 308: break;
          case 140: 
            { return RGBA16UINT;
            } 
            // fall through
          case 309: break;
          case 141: 
            { return RGBA16SINT;
            } 
            // fall through
          case 310: break;
          case 142: 
            { return RGBA32UINT;
            } 
            // fall through
          case 311: break;
          case 143: 
            { return RGBA32SINT;
            } 
            // fall through
          case 312: break;
          case 144: 
            { return RGBA8UNORM;
            } 
            // fall through
          case 313: break;
          case 145: 
            { return RGBA8SNORM;
            } 
            // fall through
          case 314: break;
          case 146: 
            { return BGRA8UNORM;
            } 
            // fall through
          case 315: break;
          case 147: 
            { return FALLTHROUGH;
            } 
            // fall through
          case 316: break;
          case 148: 
            { return RGBA16FLOAT;
            } 
            // fall through
          case 317: break;
          case 149: 
            { return RGBA32FLOAT;
            } 
            // fall through
          case 318: break;
          case 150: 
            { pushState(TYPE_SPEC); return TEXTURE_CUBE;
            } 
            // fall through
          case 319: break;
          case 151: 
            { return STATIC_ASSERT;
            } 
            // fall through
          case 320: break;
          case 152: 
            { return RG11B10FLOAT;
            } 
            // fall through
          case 321: break;
          case 153: 
            { return RGB10A2UNORM;
            } 
            // fall through
          case 322: break;
          case 154: 
            { return PUSH_CONSTANT;
            } 
            // fall through
          case 323: break;
          case 155: 
            { return RGBA8UNORM_SRGB;
            } 
            // fall through
          case 324: break;
          case 156: 
            { return BGRA8UNORM_SRGB;
            } 
            // fall through
          case 325: break;
          case 157: 
            { return TEXTURE_DEPTH_2D;
            } 
            // fall through
          case 326: break;
          case 158: 
            { pushState(TYPE_SPEC); return TEXTURE_2D_ARRAY;
            } 
            // fall through
          case 327: break;
          case 159: 
            { pushState(TYPE_SPEC); return TEXTURE_STORAGE_1D;
            } 
            // fall through
          case 328: break;
          case 160: 
            { pushState(TYPE_SPEC); return TEXTURE_STORAGE_2D;
            } 
            // fall through
          case 329: break;
          case 161: 
            { pushState(TYPE_SPEC); return TEXTURE_STORAGE_3D;
            } 
            // fall through
          case 330: break;
          case 162: 
            { pushState(TYPE_SPEC); return TEXTURE_CUBE_ARRAY;
            } 
            // fall through
          case 331: break;
          case 163: 
            { return TEXTURE_DEPTH_CUBE;
            } 
            // fall through
          case 332: break;
          case 164: 
            { return SAMPLER_COMPARISON;
            } 
            // fall through
          case 333: break;
          case 165: 
            { return TEXTURE_DEPTH_2D_ARRAY;
            } 
            // fall through
          case 334: break;
          case 166: 
            { pushState(TYPE_SPEC); return TEXTURE_MULTISAMPLED_2D;
            } 
            // fall through
          case 335: break;
          case 167: 
            { pushState(TYPE_SPEC); return TEXTURE_STORAGE_2D_ARRAY;
            } 
            // fall through
          case 336: break;
          case 168: 
            { return TEXTURE_DEPTH_CUBE_ARRAY;
            } 
            // fall through
          case 337: break;
          case 169: 
            { return TEXTURE_DEPTH_MULTISAMPLED_2D;
            } 
            // fall through
          case 338: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
